plugins {
  id 'java'
  id 'application'
  id 'org.javamodularity.moduleplugin' version '1.8.12'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'org.beryx.jlink' version '2.25.0'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.9.2'
}

sourceCompatibility = '11'
targetCompatibility = '11'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

application {
  mainModule = 'com.example.oporto_olympics'
  mainClass = 'com.example.oporto_olympics.HelloApplication'

  applicationDefaultJvmArgs = [
          '--module-path', './Assets/JavaFX/javafx-sdk-19.0.2/lib',  // Caminho para a pasta 'lib' do JavaFX SDK
          '--add-modules', 'javafx.controls,javafx.fxml'  // MÃ³dulos a serem carregados
  ]
}

javafx {
  version = '19'  // Alterado para JavaFX 19
  modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
  implementation 'com.microsoft.sqlserver:mssql-jdbc:9.4.0.jre11'
  testImplementation 'org.mockito:mockito-core:5.5.0'
  testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'
}

test {
  useJUnitPlatform()
}

jlink {
  imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  launcher {
    name = 'app'
  }
}

jlinkZip {
  group = 'distribution'
}

jar {
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE

  manifest {
    attributes(
            'Main-Class': 'com.example.oporto_olympics.HelloApplication'
    )
  }

  from {
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  }

  exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA'
}